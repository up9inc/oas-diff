on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Latest Release

defaults:
  run:
    shell: bash

jobs:
  acceptance-tests:
    name: Run acceptance tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: '^1.18'

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Acceptance Tests
        run: make acceptance-test
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'
    needs: acceptance-tests
    strategy:
      matrix:
        goosarch:
          - 'darwin/amd64'
          - 'darwin/arm64'
          - 'linux/386'
          - 'linux/amd64'
          - 'linux/arm'
          - 'linux/arm64'
          - 'windows/386'
          - 'windows/amd64'
          - 'windows/arm'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18'
      
      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Get OS and arch info
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          make build-template
          make generate
          go build -ldflags="-X 'main.Version=$VERSION'" -o "$BINARY_NAME" -v
      # - name: Release Notes
      #   run:
      #     git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          #body_path: ".github/RELEASE-TEMPLATE.md"
          files: ${{env.BINARY_NAME}}
          draft: false
          prerelease: true